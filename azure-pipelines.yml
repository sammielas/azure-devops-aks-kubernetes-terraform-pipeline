trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: DEV_ENVIRONMENT
  value: dev
- name: QA_ENVIRONMENT
  value: qa

stages:
- stage: BuildAndValidate
  displayName: Build and Validate Terraform
  jobs:
  - job: BuildAndValidateJob
    steps:
    - task: PublishPipelineArtifact@1
      displayName: Publish Terraform Artifacts
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/terraform-manifests'
        artifact: 'terraform-manifests'
        publishLocation: 'pipeline'
    
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'
    
    - task: TerraformCLI@0
      displayName: Terraform Init
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
        backendType: 'azurerm'
        backendServiceArm: 'terraform-aks-azurerm-svc-con'
        backendAzureRmResourceGroupName: 'tfstate-tbc'
        backendAzureRmStorageAccountName: 'tbc9482'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'aks-base.tfstate'
        allowTelemetryCollection: false
    
    - task: TerraformCLI@0
      displayName: Terraform Validate
      inputs:
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
        allowTelemetryCollection: false
    
    - task: PublishBuildArtifacts@1
      displayName: Publish Build Artifacts
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/terraform-manifests'
        ArtifactName: 'terraform-code'
        publishLocation: 'Container'